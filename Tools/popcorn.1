.\" ************    LibreSilicon's StdCellLibrary   *******************
.\"
.\" Organisation:   Chipforge
.\"                 Germany / European Union
.\"
.\" Profile:        Chipforge focus on fine System-on-Chip Cores in
.\"                 Verilog HDL Code which are easy understandable and
.\"                 adjustable. For further information see
.\"                         www.chipforge.org
.\"                 there are projects from small cores up to PCBs, too.
.\"
.\" File:           StdCellLib/Tools/popcorn.1
.\"
.\" Purpose:        man 1 popcorn - classical Manual Page
.\"
.\" ************    `groff -t -mdoc`    *******************************
.\"
.\" ///////////////////////////////////////////////////////////////////
.\"
.\" Copyright (c)   2019 by
.\"                 chipforge - <popcorn@nospam.chipforge.org>
.\"
.\" This source file may be used and distributed without restriction
.\" provided that this copyright statement is not removed from the
.\" file and that any derivative work contains the original copyright
.\" notice and the associated disclaimer.
.\"
.\" This source is free software; you can redistribute it and/or modify
.\" it under the terms of the GNU General Public License as published by
.\" the Free Software Foundation; either version 3 of the License, or
.\" (at your option) any later version.
.\"
.\" This source is distributed in the hope that it will be useful,
.\" but WITHOUT ANY WARRANTY; without even the implied warranty of
.\" MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
.\" GNU General Public License for more details.
.\"
.\"  (__)  You should have received a copy of the GNU General Public
.\"  oo )  License along with this program; if not, write to the
.\"  /_/|  Free Software Foundation Inc., 51 Franklin St., 5th Floor,
.\"        Boston, MA 02110-1301, USA
.\"
.\" GNU General Public License v3.0 - http://www.gnu.org/licenses/gpl-3.0.html
.\" ///////////////////////////////////////////////////////////////////
.Dd October 3, 2019
.Dt POPCORN 1 "Standard Cell Library"
.Os LibreSilicon
.Sh NAME
.Nm popcorn
.Nd generate almost all combinatorial cells
.Sh SYNOPSIS
.Nm
.Op Fl v
.Op Fl b Ar number
.Op Fl l Ar number
.Op Fl m Ar method
.Op Fl c Ar name
.Op Fl D Ar string
.Ar cell-file
.Nm
.Op Fl v
.Op Fl e Ar format
.Op Fl H Ar number
.Op Fl T Ar file
.Ar cell-file
.Nm
.Fl h | \-help
.Nm
.Fl \-version
.Sh DESCRIPTION
First, the
.Nm
utility expands a given combinatorial cell by different methods (
.Em nand ,
.Em nor ,
.Em aoi ,
.Em oai )
and writes out the new derived cell information on
.Dv STDOUT .
The new cell name and a cell description for the new cell can be specified.
Second, the
.Nm
utility can be used to derive Schematics, Layouts and Documentation in
dedicated formats for cell representations, also written to
.Dv STDOUT .
.Pp
In principle every combinatorial cell (in CMOS technology) contains two
functional complementary networks.
The pull-up network - build with pMOS transistors - as well as the pull-down
network - build with nMOS transistors.
In both networks all inputs are used to determine the output functionality.
.Pp
.RS
.Bd -literal
            ^ Vdd
            |
        | +--
   A --o| |     pMOS
        | +--
            |
            *---- Y
            |
        | +--
   A ---| |     nMOS
        | +--
            |
           _|_ Gnd
.Ed
Example Schematic for Inverter Cell (INV)
.Pp
.RE
.Nm
functionality is to take one combinatorial cell and expand both networks
by adding one transistor per network.
The new combinatorial cell can be exported in different file formats for
documentation, layout and simulation.
.Pp
.Nm
can be used recursively.
This implies that one new generated cell becomes the seed for at least 2
more generated cells.
.Pp
Or given a cell descriptions,
.Nm
is used to fully deploy all information, which is needed for a Standard
Cell Library.
.Sh OPTIONS
.Ss \-b number
Append inverting buffer to current cell description, when one path exist
which has at least
.Em number
of stacked transistors between output and any supply line.
This will sharpen the maximum LOW and minimum HIGH output levels of the
cell output.
.Ss \-c cellname
Specify the cell-name for the new generated cell.
.Ss \-D string
Specify the new cell functionality in a quoted string, e.g. "Not (or
Inverter) gate" which than occurs in generated cell documentation.
.Ss \-e format
Export cell description in one of the following file
.Em formats :
.Bl -tag -width 14n -compact
.It Em alf
IEEE 1603 / IEC 62265 (ALF 2.0)
.It Em liberty
Liberty file format (UC Berkeley, Synopsys)
.It Em layout_magic
Layout (Magic)
.It Em layout_svg
Layout (Scalable Vector Graphics)
.It Em model_verilog
`celldefine Model in Verilog (Verilog '95)
.It Em schematic_gaf
Schematic (gEDA and friends)
.It Em schematic_tex
Schematic (TeX with Circdia package)
.It Em truthtable_tex
Truth Table (TeX)
.It Em verilog-slm
Switch-level Model (Verilog '95)
.It Em verilog-bench
Stimulation Work Bench (Verilog '95)
.El
.Ss \-h, \-\-help
Display help message and exit.
.Ss \-H number
Specify the Highth of cells by number of metal tracks (eg. 7). Fractional
numbers could work inaccurate. The Width of cells varies with transistor
sizes and numbers.
.Ss \-l number
Limit the longest path of stacked transistors between output and any supply
line to
.Em number .
.Ss \-m method
Expand cell with one of following methods:
.Bl -ohang
.It Em nand
Add nMOS transistor in serial into highest free pull-down path.
Use same character and next number for new mosfet gate name.
.It Em nor
Add pMOS transistor in serial into highest free pull-up path.
Use same character and next number for new mosfet gate name.
.It Em aoi
Add nMOS transistor in serial into highest free pull-down path.
Use new character for last mosfet gate name, enumerate this character for new mosfet gate name.
.It Em oai
Add pMOS transistor in serial into highest free pull-up path.
Use new character for last mosfet gate name, enumerate this character for new mosfet gate name.
.El
.Pp
An addition in one network implies an addition - a transisor in parallel - in the complementary network also.
In some cases, the expansion with one method is not feasible while the limit of stacked transistors is already reached.
.Ss \-T file
Specify the
.Xr magic 1
Technology file, e.g.
.Dv scmos.tech .
This file contains all Layer information for the layout drawing, regarding
a dedicated technology.
.Ss \-v
Print verbose messages at
.Dv STDERR .
.Ss \-\-version
Print
.Nm Ns 's
version number and exit.
.Ss cell-file
describes the cell itself beside the netlist with some other informations.
For the exact file format, see
.Xr cell 5
.Sh FILES
.Pa *.cell
.Sh AUTHORS
.An chipforge Aq popcorn@nospam.chipforge.org
.Sh BUGS
Not yet known.
.Sh COPYRIGHT
Copyright (c) 2018-2019 Author and Contributors.
.Pp
GNU General Public License v3.0
.UR
http://www.gnu.org/licenses/gpl-3.0.html
.UE
.Sh SEE ALSO
.Xr cell 5
and
.UR
https://github.com/chipforge/StdCellLib
.UE
for current version and others auxilary tools around.
