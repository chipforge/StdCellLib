#!/usr/bin/perl -w
use strict;

my $ntech="w=1.0u l=1.0u";
my $ptech="w=1.0u l=1.0u";

if(open IN,"<../Tech/nmos.sp")
{
  print "Loading tech specs from nmos.sp file\n";
  $ntech=<IN>; $ntech=~s/[\n\r]//s;
  close IN;
}
if(open IN,"<../Tech/pmos.sp")
{
  print "Loading tech specs from pmos.sp file\n";
  $ptech=<IN>; $ptech=~s/[\n\r]//s;
  close IN;
}


print "NMOS Tech specs: $ntech\n";
print "PMOS Tech specs: $ptech\n";

my @cells=<*.cell>;
my $cell=undef;

if(scalar(@ARGV))
{
  $cell=$ARGV[0];
  $cell=~s/\.cell$//;
  @cells=$cell.".cell";
}

open OUT,">".($cell?"$cell.sp":"libresilicon.sp");
print OUT "*** Spice netlist generated by cell2spice.pl".($cell?" from cell file $cell.cell":"")." ***\n\n";

print "Params: ".scalar(@ARGV)." ".scalar(@cells)."\n";

foreach my $fn (@cells)
{
  my $short=$fn; $short=~s/\.cell//;
  my $transistors="";
  print "Opening $fn\n";
  open IN,"<$fn" || die "Error opening cell file: $!\n";
  my $M=0;
  my $ios="";
  while(<IN>)
  {
    if(m/^\.(inputs|outputs) (.*)/)
    {
      $ios.=" ".$2;
    }
    if(m/^([pn]mos) (\w+) (\w+) (\w+)/i)
    {
      my($t,$g,$d,$s)=($1,$2,$3,$4);
      my $x=($t eq "pmos")?"vdd":"gnd";
      $transistors.="M$M ".uc("$d $g $s $x")." $t ".(($t eq "pmos") ? $ptech:$ntech)."\n";
            #M1  vdd    B a_2_6# vdd pmos w=0.5u l=0.05u
            #M2  Y a_2_6# vdd vdd pmos w=0.5u l=0.05u
            #M3  a_9_6# A a_2_6# gnd nmos w=0.5u l=0.05u
            #M4  gnd    B a_9_6# gnd nmos w=0.5u l=0.05u
            #M5  Y a_2_6# gnd gnd nmos w=0.25u l=0.05u
	    #$transistors.="+ ad=0p pd=0u as=0p ps=0u\n";
      $M++;
    }
    if(m/^res (\w+) (\w+) (\w+)/i)
    {
      my($n1,$n2,$v)=($1,$2,$3);
      $transistors.="R$M ".uc($n1)." ".uc($n2)." ".uc($v)."\n";
      $M++;
    }
  }
  $ios=~s/,/ /g;$ios=~s/  / /g; $ios=~s/^ //; $ios=~s/ $//;
  print OUT ".subckt $short ".uc("vdd gnd $ios")."\n";
  print OUT $transistors;
  print OUT ".ends $short\n\n";
  close IN;
}

close OUT;

